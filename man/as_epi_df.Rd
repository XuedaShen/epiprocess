% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_df.R
\name{as_epi_df}
\alias{as_epi_df}
\alias{as_epi_df.epi_df}
\alias{as_epi_df.tbl_df}
\alias{as_epi_df.data.frame}
\alias{as_epi_df.tbl_ts}
\title{Convert to \code{epi_df} format}
\usage{
as_epi_df(x, ...)

\method{as_epi_df}{epi_df}(x, ...)

\method{as_epi_df}{tbl_df}(x, geo_type, time_type, as_of, additional_metadata = list(), ...)

\method{as_epi_df}{data.frame}(x, geo_type, time_type, as_of, additional_metadata = list(), ...)

\method{as_epi_df}{tbl_ts}(x, geo_type, time_type, as_of, additional_metadata = list(), ...)
}
\arguments{
\item{x}{A data.frame, \link[tibble:tibble]{tibble::tibble}, or \link[tsibble:tsibble]{tsibble::tsibble} to be converted}

\item{...}{Additional arguments passed to methods.}

\item{geo_type}{Type for the geo values. If missing, then the function will
attempt to infer it from the geo values present; if this fails, then it
will be set to "custom".}

\item{time_type}{Type for the time values. If missing, then the function will
attempt to infer it from the time values present; if this fails, then it
will be set to "custom".}

\item{as_of}{Time value representing the time at which the given data were
available. For example, if \code{as_of} is January 31, 2022, then the \code{epi_df}
object that is created would represent the most up-to-date version of the
data available as of January 31, 2022. If the \code{as_of} argument is missing,
then the current day-time will be used.}

\item{additional_metadata}{List of additional metadata to attach to the
\code{epi_df} object. The metadata will have \code{geo_type}, \code{time_type}, and
\code{as_of} fields; named entries from the passed list or will be included as
well.}
}
\value{
An \code{epi_df} object.
}
\description{
Converts a data frame or tibble into an \code{epi_df} object. See the \href{https://cmu-delphi.github.io/epiprocess/articles/epiprocess.html}{getting started guide} for
examples.
}
\section{Methods (by class)}{
\itemize{
\item \code{epi_df}: Simply returns the \code{epi_df} object unchanged.

\item \code{tbl_df}: The input tibble \code{x} must contain the columns
\code{geo_value} and \code{time_value}. All other columns will be preserved as is,
and treated as measured variables. If \code{as_of} is missing, then the function
will try to guess it from an \code{as_of}, \code{issue}, or \code{version} column of \code{x}
(if any of these are present), or from as an \code{as_of} field in its metadata
(stored in its attributes); if this fails, then the current day-time will
be used.

\item \code{data.frame}: Works analogously to \code{as_epi_df.tbl_df()}.

\item \code{tbl_ts}: Works analogously to \code{as_epi_df.tbl_df()}, except that
the \code{tbl_ts} class is dropped, and any key variables (other than
"geo_value") are added to the metadata of the returned object, under the
\code{other_keys} field.
}}

\section{Convert a \code{tsibble} that has county code as an extra key}{
\if{html}{\out{<div class="sourceCode r">}}\preformatted{ex1 <- tibble(
  geo_value = rep(c("ca", "fl", "pa"), each = 3),
  county_code = c(06059,06061,06067,
             12111,12113,12117,
             42101, 42103,42105),
  time_value = rep(seq(as.Date("2020-06-01"), as.Date("2020-06-03"),
                       by = "day"), length.out = length(geo_value)),
  value = 1:length(geo_value) + 0.01 * rnorm(length(geo_value))
  ) \%>\% 
  as_tsibble(index = time_value, key = c(geo_value, county_code))

ex1 <- as_epi_df(x = ex1, geo_type = "state", time_type = "day", as_of = "2020-06-03")
}\if{html}{\out{</div>}}

The metadata now includes \code{county_code} as an extra key.\if{html}{\out{<div class="sourceCode r">}}\preformatted{attr(ex1,"metadata")
}\if{html}{\out{</div>}}\preformatted{## $geo_type
## [1] "state"
## 
## $time_type
## [1] "day"
## 
## $as_of
## [1] "2020-06-03"
## 
## $other_keys
## [1] "county_code"
}
}

\section{Dealing with misspecified column names}{
\code{epi_df} requires there to be columns \code{geo_value} and \code{time_value}, if
they do not exist then \code{as_epi_df()} throws an error.\if{html}{\out{<div class="sourceCode r">}}\preformatted{data.frame(
  state = rep(c("ca", "fl", "pa"), each = 3), # misnamed
  pol = rep(c("blue", "swing", "swing"), each = 3), # extra key
  reported_date = rep(seq(as.Date("2020-06-01"), as.Date("2020-06-03"),
                       by = "day"), length.out = length(geo_value)), # misnamed
  value = 1:length(geo_value) + 0.01 * rnorm(length(geo_value))
) \%>\% as_epi_df() 
}\if{html}{\out{</div>}}\preformatted{## Error in NextMethod(): object 'geo_value' not found
}

The columns can be renamed to match \code{epi_df} format. In the example
below, notice there is also an additional key \code{pol}.\if{html}{\out{<div class="sourceCode r">}}\preformatted{ex2 <- tibble(
  state = rep(c("ca", "fl", "pa"), each = 3), # misnamed
  pol = rep(c("blue", "swing", "swing"), each = 3), # extra key
  reported_date = rep(seq(as.Date("2020-06-01"), as.Date("2020-06-03"),
                          by = "day"), length.out = length(state)), # misnamed
  value = 1:length(state) + 0.01 * rnorm(length(state))
) \%>\% data.frame()

head(ex2) 
}\if{html}{\out{</div>}}\preformatted{##   state   pol reported_date    value
## 1    ca  blue    2020-06-01 1.006594
## 2    ca  blue    2020-06-02 2.020959
## 3    ca  blue    2020-06-03 3.009690
## 4    fl swing    2020-06-01 4.005818
## 5    fl swing    2020-06-02 5.007931
## 6    fl swing    2020-06-03 6.015640
}\if{html}{\out{<div class="sourceCode r">}}\preformatted{ex2 <- ex2 \%>\% rename(geo_value = state, time_value = reported_date) \%>\%
  as_epi_df(geo_type = "state", as_of = "2020-06-03", 
            additional_metadata = c(other_keys = "pol"))

attr(ex2,"metadata")
}\if{html}{\out{</div>}}\preformatted{## $geo_type
## [1] "state"
## 
## $time_type
## [1] "day"
## 
## $as_of
## [1] "2020-06-03"
## 
## $other_keys
## [1] "pol"
}
\subsection{Adding additional keys to an \code{epi_df} object}{

In the above examples, all the keys are added to objects that are not
\code{epi_df} objects. We illustrate how to add keys to an \code{epi_df} object.

We use a subset dataset from the the \code{covidcast} library.\if{html}{\out{<div class="sourceCode r">}}\preformatted{ex3 <- jhu_csse_county_level_subset \%>\%
  filter(time_value > "2021-12-01", state_name == "Massachusetts") \%>\%
  slice_tail(n = 6) 
  
attr(ex3,"metadata") # geo_type is county currently
}\if{html}{\out{</div>}}\preformatted{## $geo_type
## [1] "county"
## 
## $time_type
## [1] "day"
## 
## $as_of
## [1] "2022-05-23 14:35:45 PDT"
}

Now we add state (MA) as a new column and a key to the metadata.\if{html}{\out{<div class="sourceCode r">}}\preformatted{ex3 <- ex3 \%>\% 
  as_tsibble() \%>\% # needed to add the additional metadata
  mutate(state = rep("MA",6)) \%>\%
  as_epi_df(additional_metadata = c(other_keys = "state"))

attr(ex3,"metadata")
}\if{html}{\out{</div>}}\preformatted{## $geo_type
## [1] "county"
## 
## $time_type
## [1] "day"
## 
## $as_of
## [1] "2022-06-14 13:38:06 PDT"
## 
## $other_keys
## [1] "state"
}
}
}

\examples{
In the following examples we will show how to create an \code{epi_df} with
additional keys.
}
