% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_conditions.R
\name{global_handlers_remove}
\alias{global_handlers_remove}
\title{Remove each specified global calling handler (if established)}
\usage{
global_handlers_remove(..., .fn_env_test = c("label", "identical", "ignore"))
}
\arguments{
\item{...}{named calling handlers: each a function that takes a condition
object as an argument and performs some handling (such as printing or
recording a stack trace), passed by name, where the name associates the
handler with a class of conditions it should be called on (e.g.,
\code{"condition"} as a catch-all, \code{"error"}, \code{"warning"}, \code{"message"}, or more
specific classes provided by some packages)}

\item{.fn_env_test}{optional; a single string, selected from the choices
listed in the nominal default value, with the effective default being the
first choice listed; indicates how \code{\link[rlang:fn_env]{rlang::fn_env}}s of handler functions
should be tested for equality when comparing handler functions for
equality. Here, \code{fn_env} is the closure environment for closure functions,
or the base namespace environment for primitive functions. Choosing
\code{"label"} means to test the \code{\link[rlang:env_name]{rlang::env_label}}s of these environments,
intended to be somewhat strict while allowing a package function to remain
equal to "itself" if its formals and body haven't changed; \code{"identical"}
means to use \code{\link[base:identical]{base::identical}} with its defaults (ignoring bytecode and
srcref); \code{"ignore"} means to ignore the \code{fn_env}s when comparing functions.
The more lenient comparisons provide some flexibility when working with
handler functions that aren't carefully crafted to work with functions
based on stricter equality tests that
\code{\link[base:conditions]{base::globalCallingHandlers}}
uses.}
}
\value{
a logical vector of length \code{length(list(...))} indicating which named
handlers were established and removed
}
\description{
Remove each specified global calling handler (if established)
}
\section{Side effects}{
 removes any named global calling handlers that were
established
}

\seealso{
Other functions working with global calling handler stack: 
\code{\link{check_global_handlers_stack_support}()},
\code{\link{global_handlers_list}()},
\code{\link{global_handlers_push}()}
}
\concept{functions working with global calling handler stack}
