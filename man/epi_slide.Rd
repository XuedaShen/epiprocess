% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slide.R
\name{epi_slide}
\alias{epi_slide}
\title{Slide a function over variables in an \code{epi_tibble} object}
\usage{
epi_slide(
  x,
  slide_fun,
  n = 14,
  align = c("trailing", "centered"),
  new_col_name = "slide_value",
  new_col_type = c("dbl", "int", "lgl", "chr", "list"),
  time_step,
  ...
)
}
\arguments{
\item{x}{The \code{epi_tibble} object under consideration.}

\item{slide_fun}{Function or formula to slide over variables in \code{x}. To
"slide" means to apply a function or formula over a running window of \code{n}
time steps (where one time step is typically one day or one week; see
details for more explanation). If a function, \code{slide_fun} must take \code{x}, a
data frame with the same column names as the original object; followed by
any number of named arguments; and ending with \code{...}. If a formula,
\code{slide_fun} can operate directly on columns accessed via \code{.x$var}, as in \code{~ mean(.x$var)} to compute a mean of a column \code{var} over a sliding window of
\code{n} time steps.}

\item{n}{Number of time steps to use in the running window. For example, if
\code{n = 5}, one time step is one day, and the alignment is "trailing", then to
produce a value on November 5, we apply the given function or formula to
data in between November 1 and 5. Default is 14.}

\item{align}{String specifying the alignment of the sliding window relative
to the reference time point; either "trailing" or "centered". The default
is "trailing". If the alignment is "centered" and \code{n} is even, then one
more observation will be used before the reference time than after the
reference time.}

\item{new_col_name}{String indicating the name of the new column that will
contain the derivative values. Default is "slide_value"; note that setting
\code{new_col_name} equal to an existing column name will overwrite this column.}

\item{new_col_type}{One of "dbl", "int", "lgl", "chr", or "list", indicating
the data type (tibble abbreviation) for the new column. Default is "dbl".}

\item{time_step}{Optional function used to define the meaning of one time
step, which if specified, overrides the default choice based on the
metadata. This function must take a positive integer and return an object
of class \code{lubridate::period}. For example, we can use \code{time_step = lubridate::hours} in order to set the time step to be one hour (this would
only be meaningful if \code{time_value} is of class \code{POSIXct}, that is, if
\code{time_type} is "day-time").}

\item{...}{Additional arguments to pass to the function or formula specified
via \code{slide_fun}.}
}
\value{
An \code{epi_tibble} object given by appending a new column to \code{x}, named
according to the \code{new_col_name} argument, containing the slide values.
}
\description{
Slides a given function over the variables in an \code{epi_tibble} object. See the
\href{https://cmu-delphi.github.io/epitools/articles/slide.html}{slide vignette}
for examples.
}
\details{
To "slide" means to apply a function or formula over a running
window of \code{n} time steps, where the unit (the meaning of one time step) is
determined by the \code{time_type} field in the metadata: the unit is one day if
\code{time_type} is either "day-time" or "day", and the unit is one week if
\code{time_type} is "week". The time step can also be set explicitly using the
\code{time_step} argument (which if specified would override the default choice
based on the metadata).

In order to slide a function or formula in a suitable grouped
fashion (for example, per geo value), we can use \code{group_by()} before the
call to \code{epi_slide()}.
}
